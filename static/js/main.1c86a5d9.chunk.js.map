{"version":3,"sources":["../../dist/lib.js","components/FormatButtons.tsx","components/VariableButtons.tsx","components/EmojiComponent.tsx","components/PreviewDisplay.tsx","components/DemoButtons.tsx","components/CharacterCounter.tsx","App.tsx","functions/generateStrings.ts","functions/countCharacters.ts","reportWebVitals.ts","index.tsx"],"names":["insertNodeAtIndex","div","el","index","console","log","childNodes","insertBefore","appendChild","insertNodeAtEnd","setNewFocus","TextAreaElement","selection","window","getSelection","focus","setPosition","defaultVariableStyles","display","userSelect","backgroundColor","borderRadius","padding","createVariableElement","ops","newElement","document","createElement","innerText","inputText","Object","assign","style","className","contentEditable","setAttribute","code","previewText","addVariableElement","textAreaElement","options","type","anchor","anchorNode","nodeType","anchorOffset","textParent","parentNode","indexOf","nodeValue","length","str","text1","substring","text2","text2El","createTextNode","addElement","applyStateToTextArea1","state","textArea","row","forEach","i","innerHTML","Text","span","unicodeSplit","arr","c","push","formats","normal","bold","italic","boldItalic","sans","sansBold","sansItalic","sansBoldItalic","script","scriptBold","fraktur","frakturBold","monospace","doublestruck","circled","inverseCircled","squared","formatArrays","keys","key","mapToNormal","mapToFormat","alph","values","alphabet","l","entries","format","text","font","Error","charMap","map","join","selectAndReplace","node","range","createRange","setStart","setEnd","removeAllRanges","addRange","execCommand","getChildren","Array","from","child","getAttribute","formatChildren","format$1","to","undefined","acTo","data","formatSelection","focusNode","fromOffset","toOffset","allChildren","too","focusOffset","fromNode","toNode","determineIfHTMLorText","toBeDetermined","outerHTML","flattenTree","parent","att","anyNode","previousSibling","startsWith","isDiv","nextSibling","makeState","defaults","border","minHeight","whiteSpace","width","UnicodeTextArea","props","throttling","shouldUpdate","updateState","throttle","onChange","textAreaRef","current","setTimeout","throttleInterval","refresh","startValue","handlePaste","e","createRef","listener","this","addEventListener","removeEventListener","activeElement","contains","isFocused","jsx","id","disabled","role","tabIndex","onPaste","textareaStyle","ref","Component","defaultProps","FormatButtons","onFormatClick","Button","variant","onClick","onMouseDown","stopPropagation","preventDefault","as","DropdownButton","onSelect","ButtonGroup","title","Dropdown","Item","eventKey","VariableButtons","onVariableClick","EmojiComponent","insertText","alignRight","Toggle","Menu","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","PreviewDisplay","heading","Jumbotron","DemoButtons","mounted","setMounted","setDisabled","color","setColor","CharacterCounter","chars","fontWeight","bytes","App","useState","editorValue","setEditorValue","setPreviewText","serializedText","setSerializedText","setChars","editorRef","useRef","Container","Row","Col","newState","reduce","acc","cur","generateSerializedString","borderColor","outlineColor","xs","md","addVariable","addText","sm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1c86a5d9.chunk.js","sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { Component, createRef } from 'react';\n\nconst insertNodeAtEnd = (div, el) => {\r\n    div.appendChild(el);\r\n    // div.appendChild(document.createTextNode(''));\r\n};\r\nconst insertNodeAtIndex = (div, el, index) => {\r\n    console.log('inai called');\r\n    if (div.childNodes[index]) {\r\n        div.insertBefore(el, div.childNodes[index]);\r\n    }\r\n    else\r\n        insertNodeAtEnd(div, el);\r\n};\n\n// Sets the caret focus within the text area div (called after variable added)\r\nconst setNewFocus = (TextAreaElement, index) => {\r\n    const selection = window.getSelection();\r\n    if (!TextAreaElement)\r\n        return;\r\n    if (!selection)\r\n        return;\r\n    TextAreaElement.focus();\r\n    selection.setPosition(TextAreaElement, index);\r\n};\n\nconst addElement = (textAreaElement, selection, newElement) => {\r\n    if (!selection)\r\n        return;\r\n    const anchor = selection.anchorNode;\r\n    if (!anchor)\r\n        return;\r\n    if (anchor.nodeType === 1) {\r\n        // If node type is element add at that position\r\n        insertNodeAtIndex(anchor, newElement, selection.anchorOffset);\r\n        setNewFocus(anchor, selection.anchorOffset + 1);\r\n    }\r\n    else if (anchor.nodeType === 3) {\r\n        const textParent = anchor.parentNode;\r\n        const index = [...textParent.childNodes].indexOf(anchor);\r\n        if (selection.anchorOffset === 0) {\r\n            // insert before text\r\n            insertNodeAtIndex(textParent, newElement, index);\r\n        }\r\n        else if (selection.anchorOffset === anchor.nodeValue.length) {\r\n            // insert after text\r\n            insertNodeAtIndex(textParent, newElement, index + 1);\r\n            setNewFocus(textParent, index + 2);\r\n        }\r\n        else {\r\n            // split text and insert in middle\r\n            const str = anchor.nodeValue || '';\r\n            const text1 = str.substring(0, selection.anchorOffset);\r\n            const text2 = str.substring(selection.anchorOffset);\r\n            // Check this\r\n            // eslint-disable-next-line no-param-reassign\r\n            anchor.nodeValue = text1;\r\n            const text2El = document.createTextNode(text2);\r\n            insertNodeAtIndex(textParent, newElement, index + 1);\r\n            insertNodeAtIndex(textParent, text2El, index + 2);\r\n            setNewFocus(textParent, index + 2);\r\n        }\r\n        // If node type is text split the text and insert element between\r\n    }\r\n};\n\nconst defaultVariableStyles = {\r\n    display: 'inline-block',\r\n    userSelect: 'all',\r\n    backgroundColor: '#d8d8d8',\r\n    borderRadius: '5px',\r\n    padding: '2px 0',\r\n};\r\nconst createVariableElement = (ops) => {\r\n    const newElement = document.createElement('span');\r\n    newElement.innerText = ' ' + ops.inputText + ' ';\r\n    Object.assign(newElement.style, defaultVariableStyles);\r\n    newElement.className = 'JazzsTest';\r\n    newElement.contentEditable = 'false';\r\n    newElement.setAttribute('data-label', ops.inputText);\r\n    newElement.setAttribute('data-code', ops.code);\r\n    newElement.setAttribute('data-preview', ops.previewText);\r\n    return newElement;\r\n};\n\n// Adds a variable element to the text area\r\nconst addVariableElement = (textAreaElement, options) => {\r\n    const newElement = createVariableElement(options);\r\n    const selection = window.getSelection();\r\n    if (selection && selection.type === 'Range') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Range is not supported yet');\r\n        return;\r\n    }\r\n    addElement(textAreaElement, selection, newElement);\r\n};\n\nconst applyStateToTextArea1 = (state, textArea) => {\r\n    //future implementation\r\n    // const p = document.createElement('div');\r\n    // textArea.appendChild(p)\r\n    let row = textArea;\r\n    state.forEach((el, i) => {\r\n        if (typeof el === 'string') {\r\n            if (el === '\\n') {\r\n                const newElement = document.createElement('div');\r\n                textArea.appendChild(newElement);\r\n                row = newElement;\r\n                if (!state[i + 1] || state[i + 1] === '\\n')\r\n                    newElement.innerHTML = '<br>';\r\n                return;\r\n            }\r\n            const str = new Text(el);\r\n            row.appendChild(str);\r\n        }\r\n        else {\r\n            const span = createVariableElement(el);\r\n            row.appendChild(span);\r\n        }\r\n    });\r\n};\n\n/* eslint-disable no-restricted-syntax */\r\nconst unicodeSplit = (str) => {\r\n  const arr = [];\r\n  for (const c of str) { arr.push(c); }\r\n  return arr;\r\n};\r\n\r\nconst formats = {\r\n  normal: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\r\n  bold: '𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  italic: '𝑎𝑏𝑐𝑑𝑒𝑓𝑔ℎ𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍1234567890',\r\n  boldItalic: '𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  sans: '𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹1234567890',\r\n  sansBold: '𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  sansItalic: '𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡1234567890',\r\n  sansBoldItalic: '𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  script: '𝒶𝒷𝒸𝒹ℯ𝒻ℊ𝒽𝒾𝒿𝓀𝓁𝓂𝓃ℴ𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏𝒜ℬ𝒞𝒟ℰℱ𝒢ℋℐ𝒥𝒦ℒℳ𝒩𝒪𝒫𝒬ℛ𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵1234567890',\r\n  scriptBold: '𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  fraktur: '𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ1234567890',\r\n  frakturBold: '𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n  monospace: '𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉1234567890',\r\n  doublestruck: '𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ1234567890',\r\n  circled: 'ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ1234567890',\r\n  inverseCircled: 'abcdefghijklmnopqrstuvwxyz🅐🅑🅒🅓🅔🅕🅖🅗🅘🅙🅚🅛🅜🅝🅞🅟🅠🅡🅢🅣🅤🅥🅦🅧🅨🅩1234567890',\r\n  squared: 'abcdefghijklmnopqrstuvwxyz🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉1234567890',\r\n};\r\n\r\nconst formatArrays = {};\r\nObject.keys(formats).forEach((key) => {\r\n  formatArrays[key] = unicodeSplit(formats[key]);\r\n});\r\nconst mapToNormal = {};\r\nconst mapToFormat = {};\r\nconst alph = unicodeSplit(formats.normal);\r\nObject.values(formatArrays).forEach((alphabet) => {\r\n  alphabet.forEach((l, i) => {\r\n    mapToNormal[l] = alph[i];\r\n  });\r\n});\r\nObject.entries(formatArrays).forEach(([key, alphabet]) => {\r\n  mapToFormat[key] = {};\r\n  alphabet.forEach((l, i) => {\r\n    mapToFormat[key][alph[i]] = l;\r\n  });\r\n});\r\n\r\nconst format = (text, font) => {\r\n  if (!font || !mapToFormat[font]) throw new Error('Unknown font');\r\n  if (typeof text !== 'string') throw new Error('Text arg must be a string');\r\n  const charMap = mapToFormat[font];\r\n  return unicodeSplit(text).map((c) => charMap[mapToNormal[c]] || c).join('');\r\n};\n\n/* eslint-disable no-continue */\r\nconst selectAndReplace = (node, text) => {\r\n    const range = document.createRange();\r\n    const selection = document.getSelection();\r\n    if (!node.parentNode || !selection)\r\n        return;\r\n    const index = [...node.parentNode.childNodes].indexOf(node);\r\n    range.setStart(node.parentNode, index);\r\n    range.setEnd(node.parentNode, index + 1);\r\n    selection.removeAllRanges();\r\n    selection.addRange(range);\r\n    document.execCommand('insertText', false, text);\r\n};\r\nconst getChildren = (node, arr = []) => {\r\n    Array.from(node.childNodes).forEach((child) => {\r\n        arr.push(child);\r\n        const att = child.getAttribute && child.getAttribute('data-code');\r\n        if (!att)\r\n            getChildren(child, arr);\r\n    });\r\n    return arr;\r\n};\r\nconst formatChildren = (format$1, node, from, to = undefined) => {\r\n    if (!node.childNodes || node.childNodes.length === 0) {\r\n        return;\r\n    }\r\n    const acTo = to || node.childNodes.length;\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = from; i < acTo; i++) {\r\n        const child = node.childNodes[i];\r\n        if (child.nodeType === 3) {\r\n            // eslint-disable-next-line no-param-reassign\r\n            selectAndReplace(child, format(child.data, format$1));\r\n        }\r\n        else if (child.nodeType === 1 && child.getAttribute('data-code'))\r\n            continue;\r\n        else\r\n            formatChildren(format$1, child, 0);\r\n    }\r\n};\r\nconst formatSelection = (TextAreaElement, format$1) => {\r\n    const selection = window.getSelection();\r\n    if (!selection || !selection.anchorNode || !selection.focusNode)\r\n        return;\r\n    const allChildren = getChildren(TextAreaElement, [TextAreaElement]);\r\n    let from = allChildren.indexOf(selection.anchorNode);\r\n    let to = allChildren.indexOf(selection.focusNode);\r\n    let fromOffset;\r\n    let toOffset;\r\n    if (from > to) {\r\n        const too = to;\r\n        to = from;\r\n        from = too;\r\n        fromOffset = selection.focusOffset;\r\n        toOffset = selection.anchorOffset;\r\n    }\r\n    else {\r\n        fromOffset = selection.anchorOffset;\r\n        toOffset = selection.focusOffset;\r\n    }\r\n    const fromNode = allChildren[from];\r\n    const toNode = allChildren[to];\r\n    if (!fromNode || !toNode)\r\n        return;\r\n    if (fromNode === toNode) {\r\n        if (fromNode.nodeType === 3) {\r\n            const text = format(fromNode.data.substring(fromOffset, toOffset), format$1);\r\n            document.execCommand('insertText', false, text);\r\n        }\r\n        else {\r\n            formatChildren(fromNode, fromOffset, toOffset);\r\n        }\r\n        return;\r\n    }\r\n    if (fromNode.nodeType === 3) {\r\n        const str = fromNode.data;\r\n        const text1 = str.substring(0, fromOffset);\r\n        const text2 = format(str.substring(fromOffset), format$1);\r\n        selectAndReplace(fromNode, text1 + text2);\r\n    }\r\n    else\r\n        formatChildren(format$1, fromNode, fromOffset);\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = from + 1; i < to; i++) {\r\n        const node = allChildren[i];\r\n        if (node.nodeType === 3)\r\n            selectAndReplace(node, format(node.data, format$1));\r\n    }\r\n    if (toNode.nodeType === 3) {\r\n        const str = toNode.data;\r\n        const text1 = format(str.substring(0, toOffset), format$1);\r\n        const text2 = str.substring(toOffset);\r\n        selectAndReplace(toNode, text1 + text2);\r\n    }\r\n    else\r\n        formatChildren(format$1, toNode, 0, toOffset);\r\n};\n\nfunction determineIfHTMLorText(toBeDetermined) {\r\n    if (toBeDetermined.outerHTML) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nconst isDiv = (node) => {\r\n    console.log('called', node);\r\n    if (determineIfHTMLorText(node)) {\r\n        console.log('yes');\r\n        console.log('oh', node.outerHTML);\r\n        return node.outerHTML.startsWith('<div>');\r\n    }\r\n    else\r\n        return false;\r\n};\r\nconst flattenTree = (arr, parent) => {\r\n    const nodes = Array.from(parent.childNodes);\r\n    nodes.forEach((node, i) => {\r\n        if (determineIfHTMLorText(node)) {\r\n            if (node.nodeType === 1 && !node.getAttribute('data-code')) {\r\n                // Only subsequent divs are linebreaks\r\n                if (i !== 0 && node.outerHTML.startsWith('<div>'))\r\n                    arr.push('\\n');\r\n                if ((node.previousSibling || node.nextSibling) && node.outerHTML.startsWith('<br>'))\r\n                    arr.push('\\n');\r\n                flattenTree(arr, node);\r\n            }\r\n            else if (node.nodeType === 1) {\r\n                const att = node.getAttribute('data-code');\r\n                // must use node.innerText on span for Edge compatibility\r\n                const anyNode = node;\r\n                // The below line is added due to a chrome bug that breaks\r\n                // the wysiwyg this atleast keeps the output consitent with the textarea display\r\n                if (anyNode.previousSibling && isDiv(anyNode.previousSibling))\r\n                    arr.push('\\n');\r\n                if (att)\r\n                    arr.push({ code: att, inputText: node.getAttribute('data-label') || '', previewText: node.getAttribute('data-preview') || '' });\r\n            }\r\n        }\r\n        else\r\n            arr.push(node.data);\r\n    });\r\n};\r\nconst makeState = (TextAreaElement) => {\r\n    if (!TextAreaElement)\r\n        return [];\r\n    const arr = [];\r\n    flattenTree(arr, TextAreaElement);\r\n    return arr;\r\n};\n\n// import setNewRange from './setNewRange';\r\nconst defaults = {\r\n    border: '1px solid black',\r\n    borderRadius: 5,\r\n    minHeight: 40,\r\n    padding: 15,\r\n    display: 'block',\r\n    whiteSpace: 'pre-wrap',\r\n    width: '100%',\r\n};\r\nclass UnicodeTextArea extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.throttling = false;\r\n        this.shouldUpdate = false;\r\n        this.updateState = () => {\r\n            if (this.props.throttle)\r\n                this.throttle();\r\n            else\r\n                this.props.onChange(makeState(this.textAreaRef.current));\r\n        };\r\n        this.throttle = () => {\r\n            if (this.throttling) {\r\n                this.shouldUpdate = true;\r\n                return;\r\n            }\r\n            else {\r\n                this.props.onChange(makeState(this.textAreaRef.current));\r\n                this.throttling = true;\r\n                setTimeout(() => {\r\n                    if (this.shouldUpdate) {\r\n                        this.props.onChange(makeState(this.textAreaRef.current));\r\n                        this.shouldUpdate = false;\r\n                    }\r\n                    this.throttling = false;\r\n                }, this.props.throttleInterval);\r\n            }\r\n        };\r\n        this.refresh = () => {\r\n            if (!this.textAreaRef.current)\r\n                return;\r\n            this.textAreaRef.current.innerHTML = '';\r\n            applyStateToTextArea1(this.props.startValue, this.textAreaRef.current);\r\n        };\r\n        this.handlePaste = (e) => {\r\n            // The below line is a workaround where chrome will insert a span into a new line which becomes inaccessable\r\n            // This will be replaced with better cleanup logic\r\n            setTimeout(() => {\r\n                const state = makeState(this.textAreaRef.current);\r\n                this.textAreaRef.current.innerHTML = '';\r\n                applyStateToTextArea1(state, this.textAreaRef.current);\r\n            }, 5);\r\n            // doPaste();\r\n        };\r\n        this.props = props;\r\n        this.textAreaRef = createRef();\r\n        this.listener = null;\r\n        document.execCommand('defaultParagraphSeparator', false, 'div');\r\n    }\r\n    componentDidMount() {\r\n        applyStateToTextArea1(this.props.startValue, this.textAreaRef.current);\r\n        this.textAreaRef.current.addEventListener(\"input\", this.updateState, false);\r\n        //this.textAreaRef.current.addEventListener('paste', () => {setTimeout(this.refresh,0)}, false);\r\n    }\r\n    componentWillUnmount() {\r\n        this.textAreaRef.current.removeEventListener(\"input\", this.updateState, false);\r\n        //this.textAreaRef.current.removeEventListener('paste', () => {setTimeout(this.refresh,0)}, false);\r\n    }\r\n    isFocused() {\r\n        const selection = document.getSelection();\r\n        if (!selection)\r\n            return false;\r\n        if (document.activeElement === this.textAreaRef.current)\r\n            return true;\r\n        return this.textAreaRef.current.contains(selection === null || selection === void 0 ? void 0 : selection.anchorNode);\r\n    }\r\n    format(format) {\r\n        if (!this.textAreaRef.current)\r\n            return;\r\n        if (!this.isFocused())\r\n            return;\r\n        formatSelection(this.textAreaRef.current, format);\r\n        this.updateState();\r\n    }\r\n    addVariable(options) {\r\n        if (!this.textAreaRef.current)\r\n            return;\r\n        if (!this.isFocused())\r\n            return;\r\n        addVariableElement(this.textAreaRef.current, options);\r\n        this.updateState();\r\n    }\r\n    addText(text) {\r\n        if (!this.textAreaRef.current)\r\n            return;\r\n        if (!this.isFocused())\r\n            return;\r\n        document.execCommand('insertText', false, text);\r\n        this.updateState();\r\n    }\r\n    render() {\r\n        return (jsx(\"div\", { id: \"jazzy-ce-area\", contentEditable: !this.props.disabled, role: \"textbox\", \"aria-label\": \"textarea\", tabIndex: 0, onPaste: this.handlePaste, className: this.props.className, style: Object.assign(Object.assign({}, defaults), this.props.textareaStyle), ref: this.textAreaRef }, void 0));\r\n    }\r\n}\r\n// eslint-disable-next-line react/static-property-placement\r\nUnicodeTextArea.defaultProps = {\r\n    textareaStyle: {},\r\n    disabled: false,\r\n    className: '',\r\n    throttle: true,\r\n    throttleInterval: 200\r\n};\n\nexport default UnicodeTextArea;\n","import React from 'react';\r\nimport {\r\n  DropdownButton, Dropdown, ButtonGroup, Button,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  onFormatClick: Function;\r\n}\r\n\r\nconst formats = [\r\n  ['normal', ' Normal abc'],\r\n  ['sansBold', 'Bold (Sans) 𝗮𝗯𝗰'],\r\n  ['sansItalic', 'Italic (Sans) 𝘢𝘣𝘤'],\r\n  ['sansBoldItalic', 'Bold Italic (Sans) 𝙖𝙗𝙘'],\r\n  ['bold', 'Bold (Serif) 𝐚𝐛𝐜'],\r\n  ['italic', 'Italic (Serif) 𝑎𝑏𝑐'],\r\n  ['boldItalic', 'Bold Italic (Serif) 𝒂𝒃𝒄'],\r\n  ['script', 'Script 𝒶𝒷𝒸'],\r\n  ['scriptBold', 'Script Bold 𝓪𝓫𝓬'],\r\n  ['fraktur', 'Fraktur 𝔞𝔟𝔠'],\r\n  ['frakturBold', 'Frak Bold 𝖆𝖇𝖈'],\r\n  ['monospace', 'Monospace 𝚊𝚋𝚌'],\r\n  ['doublestruck', 'Double 𝕒𝕓𝕔'],\r\n  ['circled', 'Circled ⓐⓑⓒ'],\r\n  ['inverseCircled', 'Circle 2 🅐🅑🅒 (CAPS)'],\r\n  ['squared', 'Squared 🄰🄱🄲 (CAPS)'],\r\n];\r\n\r\nconst FormatButtons = ({ onFormatClick }: props) => (\r\n  <>\r\n    <span className=\"mr-1 text-primary font-weight-light d-none d-lg-inline-block\">Format: </span>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('normal');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      Normal\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('sansBold');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      𝗕𝗼𝗹𝗱\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('sansItalic');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      𝘐𝘵𝘢𝘭𝘪𝘤\r\n    </Button>\r\n    <DropdownButton\r\n      onSelect={(format) => {\r\n        onFormatClick(format);\r\n      }}\r\n      as={ButtonGroup}\r\n      key=\"formats\"\r\n      id=\"dropdown-variants-formats\"\r\n      variant=\"outline-primary\"\r\n      title=\"More...\"\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      {formats.map(([format, display]) => (\r\n        <Dropdown.Item key={`fdd_${format}`} eventKey={format}>{display}</Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  </>\r\n);\r\n\r\nexport default FormatButtons;\r\n","import React from 'react';\r\nimport {\r\n  DropdownButton, Dropdown, ButtonGroup,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  onVariableClick: Function;\r\n}\r\n\r\nconst VariableButtons = ({ onVariableClick }: props) => (\r\n  <>\r\n    <span className=\"mr-1 text-secondary font-weight-light pl-1 d-none d-lg-inline-block\">Variables: </span>\r\n    <DropdownButton\r\n      as={ButtonGroup}\r\n      key=\"user-vars\"\r\n      id=\"dropdown-variants-user-vars\"\r\n      variant=\"outline-secondary\"\r\n      title=\"User\"\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Dropdown.Item\r\n        eventKey=\"title\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Title',\r\n            code: '<<user.title>>',\r\n            previewText: 'Mr',\r\n          });\r\n        }}\r\n      >\r\n        Title\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"first-name\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'First Name',\r\n            code: '<<user.firstName>>',\r\n            previewText: 'John',\r\n          });\r\n        }}\r\n      >\r\n        First Name\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"last-name\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Last Name',\r\n            code: '<<user.lastName>>',\r\n            previewText: 'Smith',\r\n          });\r\n        }}\r\n      >\r\n        Last Name\r\n      </Dropdown.Item>\r\n    </DropdownButton>\r\n    {' '}\r\n    <DropdownButton\r\n      as={ButtonGroup}\r\n      key=\"product-vars\"\r\n      id=\"dropdown-variants-product-vars\"\r\n      variant=\"outline-secondary\"\r\n      title=\"Product\"\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Dropdown.Item\r\n        eventKey=\"product-title\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Name',\r\n            code: '<<product.title>>',\r\n            previewText: 'Deluxe Vacuum Cleaner',\r\n          });\r\n        }}\r\n      >\r\n        Name\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"product-price\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Price',\r\n            code: '<<product.price>>',\r\n            previewText: '49.99',\r\n          });\r\n        }}\r\n      >\r\n        Price\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"product-price\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Category',\r\n            code: '<<product.category>>',\r\n            previewText: 'Home & Appliances',\r\n          });\r\n        }}\r\n      >\r\n        Category\r\n      </Dropdown.Item>\r\n    </DropdownButton>\r\n  </>\r\n);\r\n\r\nexport default VariableButtons;\r\n","import React from 'react';\r\nimport Picker from 'emoji-picker-react';\r\nimport {\r\n  Dropdown,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  insertText: Function;\r\n}\r\n\r\nconst EmojiComponent = ({ insertText }:props) => {\r\n  const onEmojiClick = (event: any, emojiObject: any) => {\r\n    event.preventDefault();\r\n    insertText(emojiObject.emoji);\r\n  };\r\n  return (\r\n    <Dropdown\r\n      alignRight\r\n      className=\"float-right\"\r\n    >\r\n      <Dropdown.Toggle\r\n        variant=\"outline-warning\"\r\n        id=\"emoji-dropdown\"\r\n        onMouseDown={(e) => {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        🙊😀❤️\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu>\r\n\r\n        <Picker onEmojiClick={onEmojiClick} disableAutoFocus />\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default EmojiComponent;\r\n","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nconst PreviewDisplay = (\r\n  { heading, text }: { heading:string, text:string},\r\n) => (\r\n  <Jumbotron\r\n    className=\"pt-4\"\r\n    style={{\r\n      whiteSpace: 'pre-wrap',\r\n    }}\r\n  >\r\n    <h4>{heading}</h4>\r\n    {text}\r\n  </Jumbotron>\r\n);\r\n\r\nexport default PreviewDisplay;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  mounted: boolean;\r\n  setMounted :Function;\r\n  disabled :boolean;\r\n  setDisabled :Function;\r\n  color :string;\r\n  setColor :Function;\r\n\r\n}\r\n\r\nconst DemoButtons = ({\r\n  mounted, setMounted, disabled, setDisabled, color, setColor,\r\n}: props) => (\r\n  <>\r\n    <Button\r\n      className=\"mr-1\"\r\n      onClick={() => {\r\n        setMounted(!mounted);\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      {mounted ? 'Unmount' : 'Mount'}\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      onClick={() => {\r\n        setColor(color === 'blue' ? 'white' : 'blue');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      Change Color\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      onClick={() => {\r\n        setDisabled(!disabled);\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      {disabled ? 'Enable' : 'Disable'}\r\n    </Button>\r\n  </>\r\n);\r\n\r\nexport default DemoButtons;\r\n","import React from 'react';\r\n\r\nconst CharacterCounter = ({ chars }:{chars: any}) => (\r\n  <>\r\n    Characters:\r\n    {' '}\r\n    <span style={chars.chars > 29 ? { color: 'red', fontWeight: 'bold' } : {}}>{chars.chars}</span>\r\n    {' '}\r\n    - Bytes:\r\n    {' '}\r\n    {chars.bytes}\r\n  </>\r\n);\r\n\r\nexport default CharacterCounter;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport UnicodeEditor, { EditorState, VariableOptions } from 'react-unicode-editor';\r\n\r\n// CSS\r\nimport './App.css';\r\n\r\n// Components\r\nimport FormatButtons from './components/FormatButtons';\r\nimport VariableButtons from './components/VariableButtons';\r\nimport EmojiComponent from './components/EmojiComponent';\r\nimport PreviewDisplay from './components/PreviewDisplay';\r\nimport DemoButtons from './components/DemoButtons';\r\nimport CharacterCounter from './components/CharacterCounter';\r\n\r\n// Functions (& Types)\r\nimport { CharacterCount, countCharacters } from './functions/countCharacters';\r\nimport { generatePreviewString, generateSerializedString } from './functions/generateStrings';\r\n\r\nfunction App() {\r\n  const [editorValue, setEditorValue] = useState<EditorState>([]);\r\n  const [previewText, setPreviewText] = useState<string>('');\r\n  const [serializedText, setSerializedText] = useState<string>('');\r\n  const [color, setColor] = useState<string>('white');\r\n  const [disabled, setDisabled] = useState<boolean>(false);\r\n  const [mounted, setMounted] = useState<boolean>(true);\r\n  const [chars, setChars] = useState<CharacterCount>({ chars: 0, bytes: 0 });\r\n\r\n  const editorRef = useRef<UnicodeEditor>(null);\r\n\r\n  const insertText = (text: string) => {\r\n    if (editorRef.current) editorRef.current.addText(text);\r\n  };\r\n\r\n  const onFormatClick = (format: string) => {\r\n    if (editorRef.current) editorRef.current.format(format);\r\n  };\r\n\r\n  const onVariableClick = (options: VariableOptions) => {\r\n    if (editorRef.current) editorRef.current.addVariable(options);\r\n  };\r\n\r\n  // Reduce the state object to a strings one for preview one for serialization\r\n  const onEditorChange = (newState: EditorState) => {\r\n    setEditorValue(newState);\r\n    setPreviewText(generatePreviewString(newState));\r\n    setSerializedText(generateSerializedString(newState));\r\n    setChars(countCharacters(newState));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"p-3\">\r\n      <Row className=\"mb-4 border-bottom\">\r\n        <Col><h1 className=\"h3\">react-unicode-editor example</h1></Col>\r\n      </Row>\r\n      <Row>\r\n        <Col><CharacterCounter chars={chars} /></Col>\r\n      </Row>\r\n      <Row className=\"mb-2\">\r\n        <Col>\r\n          {mounted\r\n            ? (\r\n              <UnicodeEditor\r\n                startValue={editorValue}\r\n                onChange={onEditorChange}\r\n                ref={editorRef}\r\n                textareaStyle={{\r\n                  minHeight: 100,\r\n                  backgroundColor: disabled ? 'grey' : color,\r\n                  borderColor: chars.chars > 29 ? 'red' : 'grey',\r\n                  outlineColor: chars.chars > 29 ? 'red' : 'grey',\r\n                }}\r\n                disabled={disabled}\r\n                throttleInterval={300}\r\n              />\r\n            )\r\n            : 'Not Mounted'}\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-4\">\r\n        <Col xs={8} md={10}>\r\n          <Row>\r\n            <Col className=\"mb-2\" xs={12} md={7}>\r\n              <FormatButtons onFormatClick={onFormatClick} />\r\n            </Col>\r\n            <Col xs={12} md={5}>\r\n              <VariableButtons onVariableClick={onVariableClick} />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={4} md={2}>\r\n          <EmojiComponent insertText={insertText} />\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mb-3\">\r\n        <Col sm={12} md={6}><PreviewDisplay heading=\"Preview:\" text={previewText} /></Col>\r\n        <Col sm={12} md={6}><PreviewDisplay heading=\"Serialized:\" text={serializedText} /></Col>\r\n      </Row>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <DemoButtons\r\n            mounted={mounted}\r\n            setMounted={setMounted}\r\n            disabled={disabled}\r\n            setDisabled={setDisabled}\r\n            color={color}\r\n            setColor={setColor}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { EditorState } from 'react-unicode-editor';\r\n\r\nexport const generatePreviewString = (state: EditorState) => state.reduce<string>((acc, cur) => {\r\n  if (typeof cur === 'string') return acc + cur;\r\n  return acc + cur.previewText;\r\n}, '');\r\n\r\nexport const generateSerializedString = (\r\n  state: EditorState,\r\n) => state.reduce<string>((acc, cur) => {\r\n  if (typeof cur === 'string') return acc + cur;\r\n  return acc + cur.code;\r\n}, '');\r\n","import { EditorState } from 'react-unicode-editor';\r\n\r\nexport type CharacterCount = {\r\n  chars: number;\r\n  bytes: number;\r\n}\r\n\r\nexport const countCharacters = (arr: EditorState) => {\r\n  const count = arr.reduce<CharacterCount>((acc, cur) => (typeof cur === 'string'\r\n    ? { chars: acc.chars + [...cur].length, bytes: acc.bytes + cur.length }\r\n    : acc), { chars: 0, bytes: 0 });\r\n  return count;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}