{"version":3,"sources":["../../dist/lib.js","components/FormatButtons.tsx","components/VariableButtons.tsx","components/EmojiComponent.tsx","components/PreviewDisplay.tsx","components/DemoButtons.tsx","components/CharacterCounter.tsx","components/ContextMenu.tsx","App.tsx","functions/generateStrings.ts","functions/countCharacters.ts","reportWebVitals.ts","index.tsx"],"names":["UndoStack","initialState","this","stack","Array","fill","offset","current","state","index","stopAt","backOne","insertNodeAtIndex","div","el","childNodes","insertBefore","appendChild","setNewFocus","TextAreaElement","selection","window","getSelection","focus","setPosition","addElement","textAreaElement","newElement","anchor","anchorNode","nodeType","anchorOffset","textParent","parentNode","indexOf","nodeValue","length","str","text1","substring","text2","text2El","document","createTextNode","defaultVariableStyles","lineHeight","display","userSelect","backgroundColor","borderRadius","padding","createVariableElement","ops","variableStyle","stylesObject","stylesString","style","JSON","parse","stringify","createElement","innerText","inputText","Object","assign","className","contentEditable","draggable","setAttribute","code","previewText","format","applyStateToTextArea1","textArea","row","forEach","i","innerHTML","Text","span","unicodeSplit","arr","c","push","formats","normal","bold","italic","boldItalic","sans","sansBold","sansItalic","sansBoldItalic","script","scriptBold","fraktur","frakturBold","monospace","doublestruck","circled","inverseCircled","squared","formatArrays","keys","key","mapToNormal","mapToFormat","alph","values","alphabet","l","entries","text","font","Error","charMap","map","join","determineIfHTMLorText","toBeDetermined","outerHTML","flattenTree","parent","from","node","getAttribute","isVariable","anyNode","previousSibling","startsWith","isDiv","nextSibling","data","makeState","formatTextNode","format$1","to","localFrom","localTo","str1","str2","str3","formatSelection","focusNode","_parent","_a","_b","formatting","range","focusOffset","console","log","formatSelectionRecurse","nodes","parentIsAnchor","parentIsFocus","isAnchor","isFocus","Math","min","max","charsFromEnd","oldOffset","newOffset","newRange","Range","direction","compareDocumentPosition","setStart","setEnd","removeAllRanges","addRange","formatSelectionWrapper","defaults","border","minHeight","whiteSpace","width","ReactUnicodeEditor","props","debouncing","shouldUpdate","debounceTimer","shouldAddHistory","pasteHandler","setTimeout","editorRef","history","add","updateState","inputHandler","e","inputType","back","getState","forward","replace","keydownHandler","keyCode","ctrlKey","preventDefault","debounce","onChange","debounceInterval","canUndo","allowedBack","undo","disabled","html","paste","navigator","permissions","query","name","then","result","clipboard","read","getType","blob","execCommand","canRedo","allowedForward","redo","isFocused","refresh","startValue","addVariable","options","type","addVariableElement","addText","ta","onDrop","disableDrag","onContextMenu","disableContextMenu","createRef","undoStackReference","addEventListener","removeEventListener","clearTimeout","activeElement","Boolean","contains","jsx","role","tabIndex","ref","Component","defaultProps","undefined","FormatButtons","onFormatClick","Button","variant","onClick","onMouseDown","as","DropdownButton","onSelect","ButtonGroup","id","title","Dropdown","Item","eventKey","userVariablesBGColor","productVariablesBGColor","VariableButtons","onVariableClick","stopPropagation","color","EmojiComponent","insertText","alignRight","Toggle","Menu","onEmojiClick","event","emojiObject","emoji","disableAutoFocus","native","PreviewDisplay","heading","Jumbotron","overflowWrap","DemoButtons","mounted","setMounted","setDisabled","CharacterCounter","chars","fontWeight","bytes","contextMenuBridge","createBridge","ContextMenuComponent","darkMode","matchMedia","matches","bridge","dark","Option","Divider","App","useState","editorValue","setEditorValue","setPreviewText","serializedText","setSerializedText","setChars","undoStackRef","useRef","editorStyles","borderColor","outlineColor","opacity","Container","Row","Col","newState","reduce","acc","cur","formatText","generateSerializedString","textAlign","margin","xs","md","sm","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.65a0bc4e.chunk.js","sourcesContent":["import { jsx } from 'react/jsx-runtime';\nimport { Component, createRef } from 'react';\n\nclass UndoStack {\r\n    constructor(initialState = '') {\r\n        this.stack = new Array(30).fill(null);\r\n        this.stack[0] = initialState;\r\n        this.offset = 0;\r\n        this.current = 0;\r\n    }\r\n    clear(initialState) {\r\n        this.stack.fill(null);\r\n        this.stack[0] = initialState;\r\n        this.offset = 0;\r\n        this.current = 0;\r\n    }\r\n    replace(state) {\r\n        this.stack[this.current] = state;\r\n    }\r\n    add(state) {\r\n        if (this.offset === this.current) {\r\n            this.offset = (this.offset + 1) % 30;\r\n            this.current = (this.current + 1) % 30;\r\n            this.stack[this.current] = state;\r\n        }\r\n        else {\r\n            let index = (this.current + 1) % 30;\r\n            const stopAt = (this.offset + 1) % 30;\r\n            while (index !== stopAt) {\r\n                this.stack[index] = null;\r\n                index = (index + 1) % 30;\r\n            }\r\n            this.current = (this.current + 1) % 30;\r\n            this.offset = this.current;\r\n            this.stack[this.current] = state;\r\n        }\r\n    }\r\n    allowedForward() {\r\n        return this.offset !== this.current;\r\n    }\r\n    forward() {\r\n        if (this.offset === this.current)\r\n            return false;\r\n        this.current = (this.current + 1) % 30;\r\n        return this.stack[this.current];\r\n    }\r\n    allowedBack() {\r\n        const backOne = (this.current + 29) % 30;\r\n        return !(backOne === this.offset || this.stack[backOne] === null);\r\n    }\r\n    back() {\r\n        const backOne = (this.current + 29) % 30;\r\n        if (backOne === this.offset || this.stack[backOne] === null)\r\n            return false;\r\n        this.current = backOne;\r\n        return this.stack[this.current];\r\n    }\r\n    getState() {\r\n        return this.stack[this.current];\r\n    }\r\n}\n\nconst insertNodeAtIndex = (div, el, index) => {\r\n    if (div.childNodes[index]) {\r\n        div.insertBefore(el, div.childNodes[index]);\r\n    }\r\n    else\r\n        div.appendChild(el);\r\n};\n\n// Sets the caret focus within the text area div (called after variable added)\r\nconst setNewFocus = (TextAreaElement, index) => {\r\n    const selection = window.getSelection();\r\n    if (!TextAreaElement)\r\n        return;\r\n    if (!selection)\r\n        return;\r\n    TextAreaElement.focus();\r\n    selection.setPosition(TextAreaElement, index);\r\n};\n\nconst addElement = (textAreaElement, selection, newElement) => {\r\n    if (!selection)\r\n        return;\r\n    const anchor = selection.anchorNode;\r\n    if (!anchor)\r\n        return;\r\n    if (anchor.nodeType === 1) {\r\n        // If node type is element add at that position\r\n        insertNodeAtIndex(anchor, newElement, selection.anchorOffset);\r\n        setNewFocus(anchor, selection.anchorOffset + 1);\r\n    }\r\n    else if (anchor.nodeType === 3) {\r\n        const textParent = anchor.parentNode;\r\n        const index = [...textParent.childNodes].indexOf(anchor);\r\n        if (selection.anchorOffset === 0) {\r\n            // insert before text\r\n            insertNodeAtIndex(textParent, newElement, index);\r\n        }\r\n        else if (selection.anchorOffset === anchor.nodeValue.length) {\r\n            // insert after text\r\n            insertNodeAtIndex(textParent, newElement, index + 1);\r\n            setNewFocus(textParent, index + 2);\r\n        }\r\n        else {\r\n            // split text and insert in middle\r\n            const str = anchor.nodeValue || '';\r\n            const text1 = str.substring(0, selection.anchorOffset);\r\n            const text2 = str.substring(selection.anchorOffset);\r\n            // Check this\r\n            // eslint-disable-next-line no-param-reassign\r\n            anchor.nodeValue = text1;\r\n            const text2El = document.createTextNode(text2);\r\n            insertNodeAtIndex(textParent, newElement, index + 1);\r\n            insertNodeAtIndex(textParent, text2El, index + 2);\r\n            setNewFocus(textParent, index + 2);\r\n        }\r\n        // If node type is text split the text and insert element between\r\n    }\r\n};\n\nconst defaultVariableStyles = {\r\n    lineHeight: 1,\r\n    display: 'inline-block',\r\n    userSelect: 'all',\r\n    backgroundColor: '#d8d8d8',\r\n    borderRadius: '5px',\r\n    padding: '4px 0',\r\n};\r\n// I have decided that while the developer can input the styles in a css props object\r\n// it would not be performant to parse an object for every variable on every state change\r\n// These are stored in sthe state as strings and only parsed when needed (insert, refresh or paste)\r\nconst createVariableElement = (ops, variableStyle) => {\r\n    let stylesObject;\r\n    let stylesString;\r\n    if (typeof ops.style === 'string') {\r\n        stylesObject = ops.style ? JSON.parse(ops.style) : {};\r\n        stylesString = ops.style;\r\n    }\r\n    else if (typeof ops.style === 'object') {\r\n        stylesObject = ops.style;\r\n        stylesString = JSON.stringify(ops.style);\r\n    }\r\n    else {\r\n        stylesObject = {};\r\n        stylesString = '';\r\n    }\r\n    const newElement = document.createElement('span');\r\n    newElement.innerText = ` ${ops.inputText} `;\r\n    Object.assign(newElement.style, defaultVariableStyles, variableStyle, stylesObject);\r\n    newElement.className = `react-unicode-editor-var ${ops.className || ''}`;\r\n    newElement.contentEditable = 'false';\r\n    newElement.draggable = false;\r\n    // These are added as data ats on the el so they can copy and paste\r\n    newElement.setAttribute('data-label', ops.inputText);\r\n    newElement.setAttribute('data-code', ops.code);\r\n    newElement.setAttribute('data-preview', ops.previewText);\r\n    newElement.setAttribute('data-classes', ops.className || '');\r\n    newElement.setAttribute('data-format', ops.format || 'normal');\r\n    newElement.setAttribute('data-styles', stylesString);\r\n    return newElement;\r\n};\n\n// Adds a variable element to the text area\r\nconst addVariableElement = (textAreaElement, options, variableStyle) => {\r\n    const newElement = createVariableElement(options, variableStyle);\r\n    const selection = window.getSelection();\r\n    if (selection && selection.type === 'Range') {\r\n        // eslint-disable-next-line no-console\r\n        console.log('Range is not supported yet');\r\n        return;\r\n    }\r\n    addElement(textAreaElement, selection, newElement);\r\n};\n\nconst applyStateToTextArea1 = (state, textArea, variableStyle) => {\r\n    // future implementation\r\n    // const p = document.createElement('div');\r\n    // textArea.appendChild(p)\r\n    let row = textArea;\r\n    state.forEach((el, i) => {\r\n        if (typeof el === 'string') {\r\n            if (el === '\\n') {\r\n                const newElement = document.createElement('div');\r\n                textArea.appendChild(newElement);\r\n                row = newElement;\r\n                if (!state[i + 1] || state[i + 1] === '\\n')\r\n                    newElement.innerHTML = '<br>';\r\n                return;\r\n            }\r\n            const str = new Text(el);\r\n            row.appendChild(str);\r\n        }\r\n        else {\r\n            const span = createVariableElement(el, variableStyle);\r\n            row.appendChild(span);\r\n        }\r\n    });\r\n};\n\n/* eslint-disable no-restricted-syntax */\r\nconst unicodeSplit = (str) => {\r\n    const arr = [];\r\n    for (const c of str) {\r\n        arr.push(c);\r\n    }\r\n    return arr;\r\n};\r\nconst formats = {\r\n    normal: 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890',\r\n    bold: '𝐚𝐛𝐜𝐝𝐞𝐟𝐠𝐡𝐢𝐣𝐤𝐥𝐦𝐧𝐨𝐩𝐪𝐫𝐬𝐭𝐮𝐯𝐰𝐱𝐲𝐳𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    italic: '𝑎𝑏𝑐𝑑𝑒𝑓𝑔ℎ𝑖𝑗𝑘𝑙𝑚𝑛𝑜𝑝𝑞𝑟𝑠𝑡𝑢𝑣𝑤𝑥𝑦𝑧𝐴𝐵𝐶𝐷𝐸𝐹𝐺𝐻𝐼𝐽𝐾𝐿𝑀𝑁𝑂𝑃𝑄𝑅𝑆𝑇𝑈𝑉𝑊𝑋𝑌𝑍1234567890',\r\n    boldItalic: '𝒂𝒃𝒄𝒅𝒆𝒇𝒈𝒉𝒊𝒋𝒌𝒍𝒎𝒏𝒐𝒑𝒒𝒓𝒔𝒕𝒖𝒗𝒘𝒙𝒚𝒛𝑨𝑩𝑪𝑫𝑬𝑭𝑮𝑯𝑰𝑱𝑲𝑳𝑴𝑵𝑶𝑷𝑸𝑹𝑺𝑻𝑼𝑽𝑾𝑿𝒀𝒁𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    sans: '𝖺𝖻𝖼𝖽𝖾𝖿𝗀𝗁𝗂𝗃𝗄𝗅𝗆𝗇𝗈𝗉𝗊𝗋𝗌𝗍𝗎𝗏𝗐𝗑𝗒𝗓𝖠𝖡𝖢𝖣𝖤𝖥𝖦𝖧𝖨𝖩𝖪𝖫𝖬𝖭𝖮𝖯𝖰𝖱𝖲𝖳𝖴𝖵𝖶𝖷𝖸𝖹1234567890',\r\n    sansBold: '𝗮𝗯𝗰𝗱𝗲𝗳𝗴𝗵𝗶𝗷𝗸𝗹𝗺𝗻𝗼𝗽𝗾𝗿𝘀𝘁𝘂𝘃𝘄𝘅𝘆𝘇𝗔𝗕𝗖𝗗𝗘𝗙𝗚𝗛𝗜𝗝𝗞𝗟𝗠𝗡𝗢𝗣𝗤𝗥𝗦𝗧𝗨𝗩𝗪𝗫𝗬𝗭𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    sansItalic: '𝘢𝘣𝘤𝘥𝘦𝘧𝘨𝘩𝘪𝘫𝘬𝘭𝘮𝘯𝘰𝘱𝘲𝘳𝘴𝘵𝘶𝘷𝘸𝘹𝘺𝘻𝘈𝘉𝘊𝘋𝘌𝘍𝘎𝘏𝘐𝘑𝘒𝘓𝘔𝘕𝘖𝘗𝘘𝘙𝘚𝘛𝘜𝘝𝘞𝘟𝘠𝘡1234567890',\r\n    sansBoldItalic: '𝙖𝙗𝙘𝙙𝙚𝙛𝙜𝙝𝙞𝙟𝙠𝙡𝙢𝙣𝙤𝙥𝙦𝙧𝙨𝙩𝙪𝙫𝙬𝙭𝙮𝙯𝘼𝘽𝘾𝘿𝙀𝙁𝙂𝙃𝙄𝙅𝙆𝙇𝙈𝙉𝙊𝙋𝙌𝙍𝙎𝙏𝙐𝙑𝙒𝙓𝙔𝙕𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    script: '𝒶𝒷𝒸𝒹ℯ𝒻ℊ𝒽𝒾𝒿𝓀𝓁𝓂𝓃ℴ𝓅𝓆𝓇𝓈𝓉𝓊𝓋𝓌𝓍𝓎𝓏𝒜ℬ𝒞𝒟ℰℱ𝒢ℋℐ𝒥𝒦ℒℳ𝒩𝒪𝒫𝒬ℛ𝒮𝒯𝒰𝒱𝒲𝒳𝒴𝒵1234567890',\r\n    scriptBold: '𝓪𝓫𝓬𝓭𝓮𝓯𝓰𝓱𝓲𝓳𝓴𝓵𝓶𝓷𝓸𝓹𝓺𝓻𝓼𝓽𝓾𝓿𝔀𝔁𝔂𝔃𝓐𝓑𝓒𝓓𝓔𝓕𝓖𝓗𝓘𝓙𝓚𝓛𝓜𝓝𝓞𝓟𝓠𝓡𝓢𝓣𝓤𝓥𝓦𝓧𝓨𝓩𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    fraktur: '𝔞𝔟𝔠𝔡𝔢𝔣𝔤𝔥𝔦𝔧𝔨𝔩𝔪𝔫𝔬𝔭𝔮𝔯𝔰𝔱𝔲𝔳𝔴𝔵𝔶𝔷𝔄𝔅ℭ𝔇𝔈𝔉𝔊ℌℑ𝔍𝔎𝔏𝔐𝔑𝔒𝔓𝔔ℜ𝔖𝔗𝔘𝔙𝔚𝔛𝔜ℨ1234567890',\r\n    frakturBold: '𝖆𝖇𝖈𝖉𝖊𝖋𝖌𝖍𝖎𝖏𝖐𝖑𝖒𝖓𝖔𝖕𝖖𝖗𝖘𝖙𝖚𝖛𝖜𝖝𝖞𝖟𝕬𝕭𝕮𝕯𝕰𝕱𝕲𝕳𝕴𝕵𝕶𝕷𝕸𝕹𝕺𝕻𝕼𝕽𝕾𝕿𝖀𝖁𝖂𝖃𝖄𝖅𝟏𝟐𝟑𝟒𝟓𝟔𝟕𝟖𝟗𝟎',\r\n    monospace: '𝚊𝚋𝚌𝚍𝚎𝚏𝚐𝚑𝚒𝚓𝚔𝚕𝚖𝚗𝚘𝚙𝚚𝚛𝚜𝚝𝚞𝚟𝚠𝚡𝚢𝚣𝙰𝙱𝙲𝙳𝙴𝙵𝙶𝙷𝙸𝙹𝙺𝙻𝙼𝙽𝙾𝙿𝚀𝚁𝚂𝚃𝚄𝚅𝚆𝚇𝚈𝚉1234567890',\r\n    doublestruck: '𝕒𝕓𝕔𝕕𝕖𝕗𝕘𝕙𝕚𝕛𝕜𝕝𝕞𝕟𝕠𝕡𝕢𝕣𝕤𝕥𝕦𝕧𝕨𝕩𝕪𝕫𝔸𝔹ℂ𝔻𝔼𝔽𝔾ℍ𝕀𝕁𝕂𝕃𝕄ℕ𝕆ℙℚℝ𝕊𝕋𝕌𝕍𝕎𝕏𝕐ℤ1234567890',\r\n    circled: 'ⓐⓑⓒⓓⓔⓕⓖⓗⓘⓙⓚⓛⓜⓝⓞⓟⓠⓡⓢⓣⓤⓥⓦⓧⓨⓩⒶⒷⒸⒹⒺⒻⒼⒽⒾⒿⓀⓁⓂⓃⓄⓅⓆⓇⓈⓉⓊⓋⓌⓍⓎⓏ1234567890',\r\n    inverseCircled: 'abcdefghijklmnopqrstuvwxyz🅐🅑🅒🅓🅔🅕🅖🅗🅘🅙🅚🅛🅜🅝🅞🅟🅠🅡🅢🅣🅤🅥🅦🅧🅨🅩1234567890',\r\n    squared: 'abcdefghijklmnopqrstuvwxyz🄰🄱🄲🄳🄴🄵🄶🄷🄸🄹🄺🄻🄼🄽🄾🄿🅀🅁🅂🅃🅄🅅🅆🅇🅈🅉1234567890',\r\n};\r\nconst formatArrays = {};\r\nObject.keys(formats).forEach((key) => {\r\n    formatArrays[key] = unicodeSplit(formats[key]);\r\n});\r\nconst mapToNormal = {};\r\nconst mapToFormat = {};\r\nconst alph = unicodeSplit(formats.normal);\r\nObject.values(formatArrays).forEach((alphabet) => {\r\n    alphabet.forEach((l, i) => {\r\n        mapToNormal[l] = alph[i];\r\n    });\r\n});\r\nObject.entries(formatArrays).forEach(([key, alphabet]) => {\r\n    mapToFormat[key] = {};\r\n    alphabet.forEach((l, i) => {\r\n        mapToFormat[key][alph[i]] = l;\r\n    });\r\n});\r\nconst format = (text, font) => {\r\n    if (!font || !mapToFormat[font])\r\n        throw new Error('Unknown font');\r\n    if (typeof text !== 'string')\r\n        throw new Error('Text arg must be a string');\r\n    const charMap = mapToFormat[font];\r\n    return unicodeSplit(text).map((c) => charMap[mapToNormal[c]] || c).join('');\r\n};\n\nfunction determineIfHTMLorText(toBeDetermined) {\r\n    if (toBeDetermined.outerHTML) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nconst isDiv = (node) => {\r\n    if (determineIfHTMLorText(node)) {\r\n        return node.outerHTML.startsWith('<div>');\r\n    }\r\n    return false;\r\n};\r\n// The browsers can add deeply nested divs and spans during pastes and drags etc\r\n// This function has to recurse to any depth and deal with a range of scenarios\r\nconst flattenTree = (arr, parent) => {\r\n    const nodes = Array.from(parent.childNodes);\r\n    nodes.forEach((node, i) => {\r\n        if (determineIfHTMLorText(node)) {\r\n            if (node.nodeType === 1 && !node.getAttribute('data-code')) {\r\n                // Only subsequent divs are linebreaks\r\n                if (i !== 0 && node.outerHTML.startsWith('<div>'))\r\n                    arr.push('\\n');\r\n                if ((node.previousSibling || node.nextSibling) && node.outerHTML.startsWith('<br>'))\r\n                    arr.push('\\n');\r\n                flattenTree(arr, node);\r\n            }\r\n            else if (node.nodeType === 1) {\r\n                const isVariable = node.getAttribute('data-code');\r\n                // must use node.innerText on span for Edge compatibility\r\n                const anyNode = node;\r\n                // The below line is added due to a chrome bug that breaks\r\n                // the wysiwyg this atleast keeps the output consitent with the textarea display\r\n                if (anyNode.previousSibling && isDiv(anyNode.previousSibling))\r\n                    arr.push('\\n');\r\n                if (isVariable) {\r\n                    arr.push({\r\n                        code: node.getAttribute('data-code') || '',\r\n                        inputText: node.getAttribute('data-label') || '',\r\n                        previewText: node.getAttribute('data-preview') || '',\r\n                        format: node.getAttribute('data-format') || '',\r\n                        className: node.getAttribute('data-classes') || '',\r\n                        style: node.getAttribute('data-styles') || '',\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else\r\n            arr.push(node.data);\r\n    });\r\n};\r\nconst makeState = (TextAreaElement) => {\r\n    if (!TextAreaElement)\r\n        return [];\r\n    const arr = [];\r\n    flattenTree(arr, TextAreaElement);\r\n    return arr;\r\n};\n\n/* eslint-disable no-param-reassign */\r\nconst formatTextNode = (node, format$1, from, to) => {\r\n    const localFrom = from < to ? from : to;\r\n    const localTo = from < to ? to : from;\r\n    const str1 = node.data.substring(0, localFrom);\r\n    const str2 = node.data.substring(localFrom, localTo);\r\n    const str3 = node.data.substring(localTo, node.data.length);\r\n    node.data = str1 + format(str2, format$1) + str3;\r\n};\r\nconst formatSelectionWrapper = (_parent, selection, format$1) => {\r\n    var _a, _b;\r\n    let formatting = false;\r\n    if (!selection || !selection.anchorNode || !selection.focusNode)\r\n        return;\r\n    const range = {\r\n        anchorOffset: selection.anchorOffset,\r\n        anchorNode: selection.anchorNode,\r\n        focusNode: selection.focusNode,\r\n        focusOffset: selection.focusOffset,\r\n    };\r\n    console.log(Object.assign({}, range));\r\n    const formatSelectionRecurse = (parent) => {\r\n        const nodes = Array.from(parent.childNodes);\r\n        const parentIsAnchor = parent === selection.anchorNode;\r\n        const parentIsFocus = parent === selection.focusNode;\r\n        nodes.forEach((node, index) => {\r\n            if (determineIfHTMLorText(node)) {\r\n                if (node.nodeType === 1 && !node.getAttribute('data-code')) {\r\n                    // If HTML el but not variable span recurseif (\r\n                    if ((parentIsAnchor && selection.anchorOffset === index)\r\n                        || (parentIsFocus && selection.focusOffset === index)) {\r\n                        formatting = !formatting;\r\n                    }\r\n                    formatSelectionRecurse(node);\r\n                }\r\n                else if (node.nodeType === 1) {\r\n                    // if variable span do some checks and format if required\r\n                    const isAnchor = (node === selection.anchorNode || (parentIsAnchor && selection.anchorOffset === index));\r\n                    const isFocus = (node === selection.focusNode || (parentIsFocus && selection.focusOffset === index));\r\n                    if (isAnchor && isFocus)\r\n                        node.setAttribute('data-format', format$1);\r\n                    else if (isAnchor || isFocus) {\r\n                        node.setAttribute('data-format', format$1);\r\n                        formatting = !formatting;\r\n                    }\r\n                    else if (formatting) {\r\n                        node.setAttribute('data-format', format$1);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Else if text node format accordignly - Loooooaddds of scenarios urggh;\r\n                // eslint-disable-next-line no-lonely-if\r\n                if ((parentIsAnchor && selection.anchorOffset === index)\r\n                    || (parentIsFocus && selection.focusOffset === index)) {\r\n                    if (!formatting)\r\n                        node.data = format(node.data, format$1);\r\n                    formatting = !formatting;\r\n                }\r\n                else if (node === selection.anchorNode && node === selection.focusNode) {\r\n                    const from = Math.min(selection.anchorOffset, selection.focusOffset);\r\n                    const to = Math.max(selection.anchorOffset, selection.focusOffset);\r\n                    const charsFromEnd = node.data.length - to;\r\n                    formatTextNode(node, format$1, from, to);\r\n                    range.anchorOffset = node.data.length - charsFromEnd;\r\n                    range.focusOffset = from;\r\n                }\r\n                else if (node === selection.anchorNode) {\r\n                    if (formatting) {\r\n                        const charsFromEnd = node.data.length - selection.anchorOffset;\r\n                        formatTextNode(node, format$1, 0, selection.anchorOffset);\r\n                        range.anchorOffset = node.data.length - charsFromEnd;\r\n                        console.log({\r\n                            oldOffset: selection.anchorOffset, newOffset: node.data.length - charsFromEnd,\r\n                        });\r\n                    }\r\n                    else {\r\n                        formatTextNode(node, format$1, selection.anchorOffset, node.data.length);\r\n                    }\r\n                    formatting = !formatting;\r\n                }\r\n                else if (node === selection.focusNode) {\r\n                    if (formatting) {\r\n                        const oldOffset = selection.focusOffset;\r\n                        const charsFromEnd = node.data.length - selection.focusOffset;\r\n                        formatTextNode(node, format$1, 0, selection.focusOffset);\r\n                        range.focusOffset = node.data.length - charsFromEnd;\r\n                        console.log({\r\n                            oldOffset, newOffset: node.data.length - charsFromEnd,\r\n                        });\r\n                    }\r\n                    if (formatting)\r\n                        formatTextNode(node, format$1, 0, selection.focusOffset);\r\n                    else\r\n                        formatTextNode(node, format$1, selection.focusOffset, node.data.length);\r\n                    formatting = !formatting;\r\n                }\r\n                else if (formatting) {\r\n                    node.data = format(node.data, format$1);\r\n                }\r\n            }\r\n        });\r\n        if ((parentIsFocus && parent.childNodes.length === selection.focusOffset)\r\n            || (parentIsAnchor && parent.childNodes.length === selection.anchorOffset)) {\r\n            formatting = !formatting;\r\n        }\r\n    };\r\n    formatSelectionRecurse(_parent);\r\n    const newRange = new Range();\r\n    const direction = range.anchorNode.compareDocumentPosition(range.focusNode);\r\n    if (direction === 4) {\r\n        newRange.setStart(range.anchorNode, range.anchorOffset);\r\n        newRange.setEnd(range.focusNode, range.focusOffset);\r\n    }\r\n    else if (direction === 2) {\r\n        newRange.setEnd(range.anchorNode, range.anchorOffset);\r\n        newRange.setStart(range.focusNode, range.focusOffset);\r\n    }\r\n    else if (range.anchorOffset < range.focusOffset) {\r\n        newRange.setStart(range.anchorNode, range.anchorOffset);\r\n        newRange.setEnd(range.focusNode, range.focusOffset);\r\n    }\r\n    else {\r\n        newRange.setEnd(range.anchorNode, range.anchorOffset);\r\n        newRange.setStart(range.focusNode, range.focusOffset);\r\n    }\r\n    console.log(range);\r\n    (_a = document.getSelection()) === null || _a === void 0 ? void 0 : _a.removeAllRanges();\r\n    (_b = document.getSelection()) === null || _b === void 0 ? void 0 : _b.addRange(newRange);\r\n};\r\nconst formatSelection = (TextAreaElement, format) => {\r\n    const selection = window.getSelection();\r\n    if (!selection || !selection.anchorNode || !selection.focusNode)\r\n        return;\r\n    formatSelectionWrapper(TextAreaElement, selection, format);\r\n};\n\nconst addText = (ta, text) => {\r\n    const selection = window.getSelection();\r\n    if (selection && selection.type === 'Range') {\r\n        // Range is not supported\r\n        return;\r\n    }\r\n    const newElement = new Text(text);\r\n    addElement(ta, selection, newElement);\r\n};\n\nconst handlePaste = () => {\r\n    navigator.permissions.query({ name: 'clipboard-read' }).then((result) => {\r\n        if (result.state === 'granted' || result.state === 'prompt') {\r\n            const nav = navigator;\r\n            nav.clipboard.read().then((data) => {\r\n                data[0].getType('text/html')\r\n                    .then((blob) => blob.text())\r\n                    .then((text) => {\r\n                    // reduceHTML(text);\r\n                    document.execCommand('insertHTML', false, text);\r\n                });\r\n            });\r\n        }\r\n    });\r\n};\n\nconst defaults = {\r\n    lineHeight: 1.8,\r\n    border: '1px solid black',\r\n    borderRadius: 5,\r\n    minHeight: 40,\r\n    padding: 15,\r\n    display: 'block',\r\n    whiteSpace: 'pre-wrap',\r\n    width: '100%',\r\n};\r\nclass ReactUnicodeEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.debouncing = false;\r\n        this.shouldUpdate = false;\r\n        this.debounceTimer = null;\r\n        this.shouldAddHistory = false;\r\n        this.pasteHandler = () => {\r\n            setTimeout(() => {\r\n                if (!this.editorRef.current)\r\n                    return;\r\n                const state = makeState(this.editorRef.current);\r\n                this.editorRef.current.innerHTML = '';\r\n                applyStateToTextArea1(state, this.editorRef.current, this.props.variableStyle);\r\n                this.history.add(this.editorRef.current.innerHTML);\r\n                this.shouldAddHistory = true;\r\n                this.updateState(state);\r\n            }, 0);\r\n        };\r\n        this.inputHandler = (e) => {\r\n            if (!this.editorRef.current)\r\n                return true;\r\n            switch (e.inputType) {\r\n                case 'historyUndo':\r\n                    if (this.history.back() === false)\r\n                        return false;\r\n                    this.editorRef.current.innerHTML = this.history.getState();\r\n                    this.shouldAddHistory = true;\r\n                    this.updateState();\r\n                    return false;\r\n                case 'historyRedo':\r\n                    if (this.history.forward() === false)\r\n                        return false;\r\n                    this.editorRef.current.innerHTML = this.history.getState();\r\n                    this.shouldAddHistory = true;\r\n                    this.updateState();\r\n                    return false;\r\n                case 'insertText':\r\n                    if (this.shouldAddHistory || e.data === null || e.data === ' ' || this.editorRef.current.innerHTML.length === 1)\r\n                        this.history.add(this.editorRef.current.innerHTML);\r\n                    else\r\n                        this.history.replace(this.editorRef.current.innerHTML);\r\n                    this.shouldAddHistory = false;\r\n                    this.updateState();\r\n                    break;\r\n                case 'insertParagraph':\r\n                    this.shouldAddHistory = true;\r\n                    this.history.add(this.editorRef.current.innerHTML);\r\n                    this.updateState();\r\n                    break;\r\n                case 'insertFromPaste':\r\n                    break;\r\n                case '':\r\n                    this.pasteHandler();\r\n                    break;\r\n                default:\r\n                    this.history.add(this.editorRef.current.innerHTML);\r\n                    this.shouldAddHistory = true;\r\n                    this.updateState();\r\n            }\r\n            return true;\r\n        };\r\n        this.keydownHandler = (e) => {\r\n            if (e.keyCode === 90 && e.ctrlKey) {\r\n                e.preventDefault();\r\n                if (!this.editorRef.current || this.history.back() === false)\r\n                    return;\r\n                this.shouldAddHistory = true;\r\n                this.editorRef.current.innerHTML = this.history.getState();\r\n                this.updateState();\r\n            }\r\n            if (e.keyCode === 89 && e.ctrlKey) {\r\n                e.preventDefault();\r\n                if (!this.editorRef.current || this.history.forward() === false)\r\n                    return;\r\n                this.shouldAddHistory = true;\r\n                this.editorRef.current.innerHTML = this.history.getState();\r\n                this.updateState();\r\n            }\r\n        };\r\n        this.updateState = (state) => {\r\n            if (this.props.debounce)\r\n                this.debounce();\r\n            else\r\n                this.props.onChange(state || makeState(this.editorRef.current));\r\n        };\r\n        this.debounce = () => {\r\n            if (this.debouncing) {\r\n                this.shouldUpdate = true;\r\n            }\r\n            else {\r\n                this.props.onChange(makeState(this.editorRef.current));\r\n                this.debouncing = true;\r\n                this.debounceTimer = window.setTimeout(() => {\r\n                    if (this.shouldUpdate) {\r\n                        this.props.onChange(makeState(this.editorRef.current));\r\n                        this.shouldUpdate = false;\r\n                    }\r\n                    this.debouncing = false;\r\n                    this.debounceTimer = null;\r\n                }, this.props.debounceInterval);\r\n            }\r\n        };\r\n        this.canUndo = () => this.history.allowedBack();\r\n        this.undo = () => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            const html = this.history.back();\r\n            if (html !== false)\r\n                this.editorRef.current.innerHTML = html;\r\n            this.shouldAddHistory = true;\r\n            this.updateState();\r\n        };\r\n        this.paste = () => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            this.shouldAddHistory = true;\r\n            handlePaste();\r\n        };\r\n        this.canRedo = () => this.history.allowedForward();\r\n        this.redo = () => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            const html = this.history.forward();\r\n            if (html)\r\n                this.editorRef.current.innerHTML = html;\r\n            this.shouldAddHistory = true;\r\n            this.updateState();\r\n        };\r\n        this.format = (format) => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            if (!this.isFocused())\r\n                return;\r\n            formatSelection(this.editorRef.current, format);\r\n            this.history.add(this.editorRef.current.innerHTML);\r\n            this.shouldAddHistory = true;\r\n            this.updateState();\r\n        };\r\n        this.refresh = () => {\r\n            if (!this.editorRef.current)\r\n                return;\r\n            this.editorRef.current.innerHTML = '';\r\n            applyStateToTextArea1(this.props.startValue || [], this.editorRef.current, this.props.variableStyle);\r\n        };\r\n        this.addVariable = (options) => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            if (!this.isFocused())\r\n                return;\r\n            addVariableElement(this.editorRef.current, options, this.props.variableStyle);\r\n            this.history.add(this.editorRef.current.innerHTML);\r\n            this.shouldAddHistory = true;\r\n            this.updateState();\r\n        };\r\n        this.addText = (text) => {\r\n            if (!this.editorRef.current || this.props.disabled)\r\n                return;\r\n            if (!this.isFocused())\r\n                return;\r\n            addText(this.editorRef.current, text);\r\n            this.shouldAddHistory = true;\r\n            this.history.add(this.editorRef.current.innerHTML);\r\n            this.updateState();\r\n        };\r\n        this.onDrop = (e) => {\r\n            if (this.props.disableDrag)\r\n                e.preventDefault();\r\n            else\r\n                this.pasteHandler();\r\n        };\r\n        this.onContextMenu = (e) => {\r\n            if (this.props.disableContextMenu)\r\n                e.preventDefault();\r\n            if (this.props.onContextMenu)\r\n                this.props.onContextMenu(e);\r\n        };\r\n        this.props = props;\r\n        this.editorRef = createRef();\r\n        this.history = props.undoStackReference\r\n            && props.undoStackReference.current\r\n            ? props.undoStackReference.current\r\n            : new UndoStack('');\r\n        document.execCommand('defaultParagraphSeparator', false, 'div');\r\n    }\r\n    componentDidMount() {\r\n        if (!this.editorRef.current)\r\n            return;\r\n        applyStateToTextArea1(this.props.startValue || [], this.editorRef.current, this.props.variableStyle);\r\n        this.history.replace(this.editorRef.current.innerHTML);\r\n        this.editorRef.current.addEventListener('paste', this.pasteHandler, false);\r\n        this.editorRef.current.addEventListener('input', this.inputHandler, false);\r\n        this.editorRef.current.addEventListener('keydown', this.keydownHandler, false);\r\n    }\r\n    componentWillUnmount() {\r\n        if (!this.editorRef.current)\r\n            return;\r\n        this.editorRef.current.removeEventListener('paste', this.pasteHandler, false);\r\n        this.editorRef.current.removeEventListener('input', this.inputHandler, false);\r\n        this.editorRef.current.removeEventListener('keydown', this.keydownHandler, false);\r\n        // Remove timer and update immediately if debouncing\r\n        if (this.debounceTimer !== null) {\r\n            window.clearTimeout(this.debounceTimer);\r\n            if (this.shouldUpdate)\r\n                this.props.onChange(makeState(this.editorRef.current));\r\n        }\r\n    }\r\n    isFocused() {\r\n        const selection = document.getSelection();\r\n        if (!selection)\r\n            return false;\r\n        if (document.activeElement === this.editorRef.current)\r\n            return true;\r\n        return Boolean(this.editorRef.current\r\n            && this.editorRef.current.contains(selection === null || selection === void 0 ? void 0 : selection.anchorNode));\r\n    }\r\n    render() {\r\n        return (jsx(\"div\", { className: `react-unicode-editor ${this.props.className || ''}`, contentEditable: !this.props.disabled, role: \"textbox\", \"aria-label\": \"textarea\", onContextMenu: this.onContextMenu, onDrop: this.onDrop, tabIndex: 0, style: Object.assign(Object.assign({}, defaults), this.props.style), ref: this.editorRef }, void 0));\r\n    }\r\n}\r\n// eslint-disable-next-line react/static-property-placement\r\nReactUnicodeEditor.defaultProps = {\r\n    style: {},\r\n    disabled: false,\r\n    className: '',\r\n    debounce: true,\r\n    debounceInterval: 200,\r\n    startValue: [],\r\n    disableContextMenu: false,\r\n    onContextMenu: null,\r\n    undoStackReference: undefined,\r\n    variableStyle: undefined,\r\n    disableDrag: true,\r\n};\n\nexport { UndoStack, ReactUnicodeEditor as default, format as formatText };\n","import React from 'react';\r\nimport {\r\n  DropdownButton, Dropdown, ButtonGroup, Button,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  onFormatClick: Function;\r\n}\r\n\r\nconst formats = [\r\n  ['normal', ' Normal abc'],\r\n  ['sansBold', 'Bold (Sans) 𝗮𝗯𝗰'],\r\n  ['sansItalic', 'Italic (Sans) 𝘢𝘣𝘤'],\r\n  ['sansBoldItalic', 'Bold Italic (Sans) 𝙖𝙗𝙘'],\r\n  ['bold', 'Bold (Serif) 𝐚𝐛𝐜'],\r\n  ['italic', 'Italic (Serif) 𝑎𝑏𝑐'],\r\n  ['boldItalic', 'Bold Italic (Serif) 𝒂𝒃𝒄'],\r\n  ['script', 'Script 𝒶𝒷𝒸'],\r\n  ['scriptBold', 'Script Bold 𝓪𝓫𝓬'],\r\n  ['fraktur', 'Fraktur 𝔞𝔟𝔠'],\r\n  ['frakturBold', 'Frak Bold 𝖆𝖇𝖈'],\r\n  ['monospace', 'Monospace 𝚊𝚋𝚌'],\r\n  ['doublestruck', 'Double 𝕒𝕓𝕔'],\r\n  ['circled', 'Circled ⓐⓑⓒ'],\r\n  ['inverseCircled', 'Circle 2 🅐🅑🅒 (CAPS)'],\r\n  ['squared', 'Squared 🄰🄱🄲 (CAPS)'],\r\n];\r\n\r\nconst FormatButtons = ({ onFormatClick }: props) => (\r\n  <>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('normal');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      Regular\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('sansBold');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      𝐁\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      variant=\"outline-primary\"\r\n      onClick={() => {\r\n        onFormatClick('sansItalic');\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      𝒊\r\n    </Button>\r\n    <DropdownButton\r\n      onSelect={(format) => {\r\n        onFormatClick(format);\r\n      }}\r\n      as={ButtonGroup}\r\n      key=\"formats\"\r\n      id=\"dropdown-variants-formats\"\r\n      variant=\"outline-primary\"\r\n      title=\"More...\"\r\n      onMouseDown={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      {formats.map(([format, display]) => (\r\n        <Dropdown.Item key={`fdd_${format}`} eventKey={format}>{display}</Dropdown.Item>\r\n      ))}\r\n    </DropdownButton>\r\n  </>\r\n);\r\n\r\nexport default FormatButtons;\r\n","import React from 'react';\r\nimport {\r\n  DropdownButton, Dropdown, ButtonGroup,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  onVariableClick: Function;\r\n}\r\n\r\nconst userVariablesBGColor = '#1ce600';\r\nconst productVariablesBGColor = '#29aaff';\r\n\r\nconst VariableButtons = ({ onVariableClick }: props) => (\r\n  <>\r\n    <span className=\"mr-1 text-secondary font-weight-light pl-1 d-none d-lg-inline-block\">Variables: </span>\r\n    <DropdownButton\r\n      as={ButtonGroup}\r\n      key=\"user-vars\"\r\n      id=\"dropdown-variants-user-vars\"\r\n      variant=\"outline-secondary\"\r\n      title=\"User\"\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Dropdown.Item\r\n        eventKey=\"title\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Title',\r\n            code: '<<user.title>>',\r\n            previewText: 'Mr',\r\n            style: { color: 'white', backgroundColor: userVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        Title\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"first-name\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'First Name',\r\n            code: '<<user.firstName>>',\r\n            previewText: 'John',\r\n            style: { color: 'white', backgroundColor: userVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        First Name\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"last-name\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Last Name',\r\n            code: '<<user.lastName>>',\r\n            previewText: 'Smith',\r\n            style: { color: 'white', backgroundColor: userVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        Last Name\r\n      </Dropdown.Item>\r\n    </DropdownButton>\r\n    {' '}\r\n    <DropdownButton\r\n      as={ButtonGroup}\r\n      key=\"product-vars\"\r\n      id=\"dropdown-variants-product-vars\"\r\n      variant=\"outline-secondary\"\r\n      title=\"Product\"\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n    >\r\n      <Dropdown.Item\r\n        eventKey=\"product-title\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Name',\r\n            code: '<<product.title>>',\r\n            previewText: 'Deluxe Vacuum Cleaner',\r\n            style: { color: 'white', backgroundColor: productVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        Name\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"product-price\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Price',\r\n            code: '<<product.price>>',\r\n            previewText: '49.99',\r\n            style: { color: 'white', backgroundColor: productVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        Price\r\n      </Dropdown.Item>\r\n      <Dropdown.Item\r\n        eventKey=\"product-price\"\r\n        onSelect={() => {\r\n          onVariableClick({\r\n            inputText: 'Product Category',\r\n            code: '<<product.category>>',\r\n            previewText: 'Home & Appliances',\r\n            style: { color: 'white', backgroundColor: productVariablesBGColor },\r\n          });\r\n        }}\r\n      >\r\n        Category\r\n      </Dropdown.Item>\r\n    </DropdownButton>\r\n  </>\r\n);\r\n\r\nexport default VariableButtons;\r\n","import React from 'react';\r\nimport Picker from 'emoji-picker-react';\r\nimport {\r\n  Dropdown,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  insertText: Function;\r\n}\r\n\r\nconst EmojiComponent = ({ insertText }:props) => {\r\n  const onEmojiClick = (event: any, emojiObject: any) => {\r\n    event.preventDefault();\r\n    insertText(emojiObject.emoji);\r\n  };\r\n  return (\r\n    <Dropdown\r\n      alignRight\r\n      className=\"float-right\"\r\n    >\r\n      <Dropdown.Toggle\r\n        variant=\"outline-warning\"\r\n        id=\"emoji-dropdown\"\r\n        onMouseDown={(e) => {\r\n          e.stopPropagation();\r\n          e.preventDefault();\r\n        }}\r\n      >\r\n        🙊😀❤️\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu>\r\n\r\n        <Picker onEmojiClick={onEmojiClick} disableAutoFocus native />\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default EmojiComponent;\r\n","import React from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nconst PreviewDisplay = (\r\n  { heading, text }: { heading:string, text:string},\r\n) => (\r\n  <Jumbotron\r\n    className=\"pt-4\"\r\n    style={{\r\n      whiteSpace: 'pre-wrap',\r\n      overflowWrap: 'break-word',\r\n    }}\r\n  >\r\n    <h4>{heading}</h4>\r\n    {text}\r\n  </Jumbotron>\r\n);\r\n\r\nexport default PreviewDisplay;\r\n","import React from 'react';\r\nimport {\r\n  Button,\r\n} from 'react-bootstrap';\r\n\r\ninterface props {\r\n  mounted: boolean;\r\n  setMounted :Function;\r\n  disabled :boolean;\r\n  setDisabled :Function;\r\n\r\n}\r\n\r\nconst DemoButtons = ({\r\n  mounted, setMounted, disabled, setDisabled,\r\n}: props) => (\r\n  <>\r\n    <Button\r\n      className=\"mr-1\"\r\n      onClick={() => {\r\n        setMounted(!mounted);\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      {mounted ? 'Unmount' : 'Mount'}\r\n    </Button>\r\n    <Button\r\n      className=\"mr-1\"\r\n      onClick={() => {\r\n        setDisabled(!disabled);\r\n      }}\r\n      onMouseDown={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      }}\r\n      as=\"div\"\r\n    >\r\n      {disabled ? 'Enable' : 'Disable'}\r\n    </Button>\r\n  </>\r\n);\r\n\r\nexport default DemoButtons;\r\n","import React from 'react';\r\n\r\nconst CharacterCounter = ({ chars }:{chars: any}) => (\r\n  <>\r\n    Characters:\r\n    {' '}\r\n    <span style={chars.chars > 29 ? { color: 'red', fontWeight: 'bold' } : {}}>{chars.chars}</span>\r\n    {' '}\r\n    - Bytes:\r\n    {' '}\r\n    {chars.bytes}\r\n  </>\r\n);\r\n\r\nexport default CharacterCounter;\r\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React from 'react';\r\n\r\nimport ContextMenu, { createBridge } from 'react-context-menu-hooks';\r\n\r\ninterface props {\r\n  redo: () => void,\r\n  undo: () => void,\r\n  paste: () => void,\r\n  canUndo: boolean,\r\n  canRedo: boolean\r\n}\r\n\r\nexport const contextMenuBridge = createBridge({});\r\n\r\nconst ContextMenuComponent = ({\r\n  redo, undo, canUndo, canRedo, paste,\r\n} : props) => {\r\n  const darkMode: boolean = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n\r\n  return (\r\n    <ContextMenu bridge={contextMenuBridge} dark={darkMode}>\r\n      <ContextMenu.Option\r\n        disabled={!canUndo}\r\n        onClick={undo}\r\n      >\r\n        Undo\r\n      </ContextMenu.Option>\r\n      <ContextMenu.Option\r\n        disabled={!canRedo}\r\n        onClick={redo}\r\n      >\r\n        Redo\r\n      </ContextMenu.Option>\r\n      <ContextMenu.Divider />\r\n      <ContextMenu.Option\r\n        onClick={() => { document.execCommand('cut'); }}\r\n      >\r\n        Cut\r\n      </ContextMenu.Option>\r\n      <ContextMenu.Option\r\n        onClick={() => { document.execCommand('copy'); }}\r\n      >\r\n        Copy\r\n      </ContextMenu.Option>\r\n      <ContextMenu.Option\r\n        onClick={paste}\r\n      >\r\n        Paste\r\n      </ContextMenu.Option>\r\n    </ContextMenu>\r\n  );\r\n};\r\n\r\nexport default ContextMenuComponent;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport UnicodeEditor, { EditorState, VariableOptions, UndoStack } from 'react-unicode-editor';\r\n\r\n// CSS\r\nimport './App.css';\r\nimport '../node_modules/react-context-menu-hooks/src/ContextMenu.css';\r\n\r\n// Components\r\nimport { ContextMenuTriggerArea } from 'react-context-menu-hooks';\r\nimport FormatButtons from './components/FormatButtons';\r\nimport VariableButtons from './components/VariableButtons';\r\nimport EmojiComponent from './components/EmojiComponent';\r\nimport PreviewDisplay from './components/PreviewDisplay';\r\nimport DemoButtons from './components/DemoButtons';\r\nimport CharacterCounter from './components/CharacterCounter';\r\nimport ContextMenu, { contextMenuBridge } from './components/ContextMenu';\r\n\r\n// Functions (& Types)\r\nimport { CharacterCount, countCharacters } from './functions/countCharacters';\r\nimport { generatePreviewString, generateSerializedString } from './functions/generateStrings';\r\n\r\nfunction App() {\r\n  const [editorValue, setEditorValue] = useState<EditorState>([]);\r\n  const [previewText, setPreviewText] = useState<string>('');\r\n  const [serializedText, setSerializedText] = useState<string>('');\r\n  const [disabled, setDisabled] = useState<boolean>(false);\r\n  const [mounted, setMounted] = useState<boolean>(true);\r\n  const [chars, setChars] = useState<CharacterCount>({ chars: 0, bytes: 0 });\r\n\r\n  // By creating an undoStackReference and passing it to the Editor as a prop the component can\r\n  // maintain undo history between mounts\r\n  const undoStackRef = useRef<UndoStack>(new UndoStack());\r\n\r\n  const editorRef = useRef<UnicodeEditor>(null);\r\n\r\n  const handleEmojiClick = (text: string) => {\r\n    if (editorRef.current) editorRef.current.addText(text);\r\n  };\r\n\r\n  const handleFormatClick = (format: string) => {\r\n    if (editorRef.current) editorRef.current.format(format);\r\n  };\r\n\r\n  const handleVariableClick = (options: VariableOptions) => {\r\n    if (editorRef.current) editorRef.current.addVariable(options);\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (editorRef.current) editorRef.current.undo();\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (editorRef.current) editorRef.current.redo();\r\n  };\r\n\r\n  // Reduce the state object to a strings one for preview one for serialization\r\n  const handleEditorChange = (newState: EditorState) => {\r\n    setEditorValue(newState);\r\n    // Ideally the next three values could be built in a single iteration , for demo\r\n    // purposes I'll leave this as three separate functions, but this does reduce performance\r\n    setPreviewText(generatePreviewString(newState));\r\n    setSerializedText(generateSerializedString(newState));\r\n    setChars(countCharacters(newState));\r\n  };\r\n\r\n  const editorStyles: React.CSSProperties = {\r\n    minHeight: 100,\r\n    backgroundColor: disabled ? 'grey' : 'white',\r\n    borderColor: chars.chars > 29 ? 'red' : 'grey',\r\n    outlineColor: chars.chars > 29 ? 'red' : 'grey',\r\n    opacity: disabled ? '50%' : undefined,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContextMenu\r\n        undo={handleUndo}\r\n        redo={handleRedo}\r\n        paste={editorRef.current ? editorRef.current.paste : () => {}}\r\n        canUndo={editorRef.current ? editorRef.current.canUndo() : false}\r\n        canRedo={editorRef.current ? editorRef.current.canRedo() : false}\r\n      />\r\n      <Container className=\"p-3\">\r\n        <Row className=\"mb-4 border-bottom\">\r\n          <Col><h1 className=\"h3\">react-unicode-editor example</h1></Col>\r\n        </Row>\r\n        <Row>\r\n          <Col><CharacterCounter chars={chars} /></Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col>\r\n            {mounted\r\n              ? (\r\n                <ContextMenuTriggerArea data={{}} bridge={contextMenuBridge}>\r\n                  <UnicodeEditor\r\n                    onChange={handleEditorChange}\r\n                    startValue={editorValue}\r\n                    disableContextMenu={false}\r\n                    undoStackReference={undoStackRef}\r\n                    ref={editorRef}\r\n                    style={editorStyles}\r\n                    disabled={disabled}\r\n                    debounceInterval={600}\r\n                  />\r\n                </ContextMenuTriggerArea>\r\n              )\r\n              : (<h4 style={{ textAlign: 'center', margin: '1.5em' }}>Not Mounted</h4>)}\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-4\">\r\n          <Col xs={8} md={10}>\r\n            <Row>\r\n              <Col className=\"mb-2\" xs={12} md={7}>\r\n                <FormatButtons onFormatClick={handleFormatClick} />\r\n              </Col>\r\n              <Col xs={12} md={5}>\r\n                <VariableButtons onVariableClick={handleVariableClick} />\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col xs={4} md={2}>\r\n            <EmojiComponent insertText={handleEmojiClick} />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col sm={12} md={6}><PreviewDisplay heading=\"Preview:\" text={previewText} /></Col>\r\n          <Col sm={12} md={6}><PreviewDisplay heading=\"Serialized:\" text={serializedText} /></Col>\r\n        </Row>\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <DemoButtons\r\n              mounted={mounted}\r\n              setMounted={setMounted}\r\n              disabled={disabled}\r\n              setDisabled={setDisabled}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { EditorState, formatText } from 'react-unicode-editor';\r\n\r\nexport const generatePreviewString = (state: EditorState) => state.reduce<string>((acc, cur) => {\r\n  if (typeof cur === 'string') return acc + cur;\r\n  return cur.format === 'normal' ? acc + cur.previewText : acc + formatText(cur.previewText, cur.format || 'normal');\r\n}, '');\r\n\r\nexport const generateSerializedString = (\r\n  state: EditorState,\r\n) => state.reduce<string>((acc, cur) => {\r\n  if (typeof cur === 'string') return acc + cur;\r\n  return acc + cur.code;\r\n}, '');\r\n","import { EditorState } from 'react-unicode-editor';\r\n\r\nexport type CharacterCount = {\r\n  chars: number;\r\n  bytes: number;\r\n}\r\n\r\nexport const countCharacters = (arr: EditorState) => {\r\n  const count = arr.reduce<CharacterCount>((acc, cur) => (typeof cur === 'string'\r\n    ? { chars: acc.chars + Array.from(cur).length, bytes: acc.bytes + cur.length }\r\n    : acc), { chars: 0, bytes: 0 });\r\n  return count;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}